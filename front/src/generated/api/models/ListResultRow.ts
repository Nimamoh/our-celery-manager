/* tslint:disable */
/* eslint-disable */
/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Status } from './Status';
import {
    StatusFromJSON,
    StatusFromJSONTyped,
    StatusToJSON,
} from './Status';

/**
 * 
 * @export
 * @interface ListResultRow
 */
export interface ListResultRow {
    /**
     * 
     * @type {any}
     * @memberof ListResultRow
     */
    task_id: any | null;
    /**
     * 
     * @type {any}
     * @memberof ListResultRow
     */
    name: any | null;
    /**
     * 
     * @type {Status}
     * @memberof ListResultRow
     */
    status: Status;
    /**
     * 
     * @type {any}
     * @memberof ListResultRow
     */
    date_done: any | null;
    /**
     * 
     * @type {any}
     * @memberof ListResultRow
     */
    traceback: any | null;
    /**
     * 
     * @type {any}
     * @memberof ListResultRow
     */
    queue: any | null;
    /**
     * 
     * @type {any}
     * @memberof ListResultRow
     */
    args: any | null;
    /**
     * 
     * @type {any}
     * @memberof ListResultRow
     */
    kwargs: any | null;
    /**
     * 
     * @type {any}
     * @memberof ListResultRow
     */
    result: any | null;
    /**
     * 
     * @type {any}
     * @memberof ListResultRow
     */
    clones: any | null;
}

/**
 * Check if a given object implements the ListResultRow interface.
 */
export function instanceOfListResultRow(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "task_id" in value;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "status" in value;
    isInstance = isInstance && "date_done" in value;
    isInstance = isInstance && "traceback" in value;
    isInstance = isInstance && "queue" in value;
    isInstance = isInstance && "args" in value;
    isInstance = isInstance && "kwargs" in value;
    isInstance = isInstance && "result" in value;
    isInstance = isInstance && "clones" in value;

    return isInstance;
}

export function ListResultRowFromJSON(json: any): ListResultRow {
    return ListResultRowFromJSONTyped(json, false);
}

export function ListResultRowFromJSONTyped(json: any, ignoreDiscriminator: boolean): ListResultRow {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'task_id': json['task_id'],
        'name': json['name'],
        'status': StatusFromJSON(json['status']),
        'date_done': json['date_done'],
        'traceback': json['traceback'],
        'queue': json['queue'],
        'args': json['args'],
        'kwargs': json['kwargs'],
        'result': json['result'],
        'clones': json['clones'],
    };
}

export function ListResultRowToJSON(value?: ListResultRow | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'task_id': value.task_id,
        'name': value.name,
        'status': StatusToJSON(value.status),
        'date_done': value.date_done,
        'traceback': value.traceback,
        'queue': value.queue,
        'args': value.args,
        'kwargs': value.kwargs,
        'result': value.result,
        'clones': value.clones,
    };
}

