/* tslint:disable */
/* eslint-disable */
/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { TaskResult } from './TaskResult';
import {
    TaskResultFromJSON,
    TaskResultFromJSONTyped,
    TaskResultToJSON,
} from './TaskResult';

/**
 * 
 * @export
 * @interface TaskResultPage
 */
export interface TaskResultPage {
    /**
     * 
     * @type {number}
     * @memberof TaskResultPage
     */
    total: number;
    /**
     * 
     * @type {number}
     * @memberof TaskResultPage
     */
    page_number: number;
    /**
     * 
     * @type {number}
     * @memberof TaskResultPage
     */
    page_size: number;
    /**
     * 
     * @type {Array<TaskResult>}
     * @memberof TaskResultPage
     */
    data: Array<TaskResult>;
}

/**
 * Check if a given object implements the TaskResultPage interface.
 */
export function instanceOfTaskResultPage(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "total" in value;
    isInstance = isInstance && "page_number" in value;
    isInstance = isInstance && "page_size" in value;
    isInstance = isInstance && "data" in value;

    return isInstance;
}

export function TaskResultPageFromJSON(json: any): TaskResultPage {
    return TaskResultPageFromJSONTyped(json, false);
}

export function TaskResultPageFromJSONTyped(json: any, ignoreDiscriminator: boolean): TaskResultPage {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'total': json['total'],
        'page_number': json['page_number'],
        'page_size': json['page_size'],
        'data': ((json['data'] as Array<any>).map(TaskResultFromJSON)),
    };
}

export function TaskResultPageToJSON(value?: TaskResultPage | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'total': value.total,
        'page_number': value.page_number,
        'page_size': value.page_size,
        'data': ((value.data as Array<any>).map(TaskResultToJSON)),
    };
}

